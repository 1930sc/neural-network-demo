var __extends=this.__extends||function(t,n){for(var i in n)if(n.hasOwnProperty(i))t[i]=n[i];function e(){this.constructor=t}e.prototype=n.prototype;t.prototype=new e};var Net;(function(t){var n;function i(t,i){if(t===void 0){t=0}if(i===void 0){i=1}if(n!==undefined){var e=n;n=undefined;return e*i+t}else{var o,u,a,r;do{o=2*Math.random()-1;u=2*Math.random()-1;a=o*o+u*u}while(a>=1||a==0);r=Math.sqrt(-2*Math.log(a)/a);n=u*r;return o*r*i+t}}t.randomGaussian=i;var e=function(t){if(t===Infinity){return 1}else if(t===-Infinity){return-1}else{var n=Math.exp(2*t);return(n-1)/(n+1)}};var o={sigmoid:{f:function(t){return 1/(1+Math.exp(-t))},df:function(t){t=1/(1+Math.exp(-t));return t*(1-t)}},tanh:{f:function(t){return e(t)},df:function(t){t=e(t);return 1-t*t}},linear:{f:function(t){return t},df:function(t){return 1}}};function u(t,n){var i=new Array(t);for(var e=0;e<t;e++)i[e]=n(e);return i}var a=function(){function n(n,i,e,o,a,r,c){var f=this;if(a===void 0){a=true}if(r===void 0){r=function(){return Math.random()-.5}}this.learnRate=o;this.bias=a;this.layers=[];this.connections=[];var l=0;this.inputs=u(n.neuronCount,function(t){return new p(l++,n.names[t])});this.layers.push(this.inputs.slice());for(var d=0;d<i.length;d++){var v=i[d];this.layers.push(u(v.neuronCount,function(t){return new s(v.activation,l++)}))}this.outputs=u(e.neuronCount,function(t){return new h(e.activation,l++,e.names[t])});this.layers.push(this.outputs);this.bias=a;for(var g=0;g<this.layers.length-1;g++){var y=this.layers[g];var m=this.layers[g+1];if(a)y.push(new p(l++,"1 (bias)",1));for(var w=0;w<y.length;w++){var C=y[w];for(var x=0;x<m.length;x++){var L=m[x];var b=new t.NeuronConnection(C,L,r());C.outputs.push(b);L.inputs.push(b);this.connections.push(b)}}}if(c)c.forEach(function(t,n){return f.connections[n].weight=t})}n.prototype.setInputsAndCalculate=function(t){for(var n=0;n<this.inputs.length;n++)this.inputs[n].output=t[n];for(var i=0,e=this.layers.slice(1);i<e.length;i++){var o=e[i];for(var u=0;u<o.length;u++){var a=o[u];a.calculateOutput()}}};n.prototype.getOutput=function(t){this.setInputsAndCalculate(t);return this.outputs.map(function(t){return t.output})};n.prototype.train=function(t,n){this.setInputsAndCalculate(t);for(var i=0;i<this.outputs.length;i++)this.outputs[i].targetOutput=n[i];for(var e=this.layers.length-1;e>0;e--){for(var o=0,u=this.layers[e];o<u.length;o++){var a=u[o];a.calculateError();for(var r=0,s=a.inputs;r<s.length;r++){var p=s[r];p.calculateDeltaWeight(this.learnRate)}}}for(var h=0,c=this.connections;h<c.length;h++){var p=c[h];p.weight+=p.deltaWeight}};return n}();t.NeuralNet=a;var r=function(){function t(t,n,i){this.inp=t;this.out=n;this.weight=i;this.deltaWeight=0}t.prototype.calculateDeltaWeight=function(t){this.deltaWeight=t*this.out.error*this.inp.output};return t}();t.NeuronConnection=r;var s=function(){function t(t,n){this.activation=t;this.id=n;this.inputs=[];this.outputs=[];this.weightedInputs=0;this.output=0;this.error=0}t.prototype.calculateWeightedInputs=function(){this.weightedInputs=0;for(var t=0,n=this.inputs;t<n.length;t++){var i=n[t];this.weightedInputs+=i.inp.output*i.weight}};t.prototype.calculateOutput=function(){this.calculateWeightedInputs();this.output=o[this.activation].f(this.weightedInputs)};t.prototype.calculateError=function(){var t=0;for(var n=0,i=this.outputs;n<i.length;n++){var e=i[n];t+=e.out.error*e.weight}this.error=t*o[this.activation].df(this.weightedInputs)};return t}();t.Neuron=s;var p=function(t){__extends(n,t);function n(n,i,e){t.call(this,null,n);this.name=i;this.constant=false;if(e!==undefined){this.output=e;this.constant=true}}n.prototype.calculateOutput=function(){};n.prototype.calculateWeightedInputs=function(){};n.prototype.calculateError=function(){};return n}(s);t.InputNeuron=p;var h=function(t){__extends(n,t);function n(n,i,e){t.call(this,n,i);this.activation=n;this.name=e}n.prototype.calculateError=function(){this.error=o[this.activation].df(this.weightedInputs)*(this.targetOutput-this.output)};return n}(s);t.OutputNeuron=h})(Net||(Net={}));var NetworkGraph=function(){function t(t){this.networkGraphContainer=t;this.nodes=new vis.DataSet;this.edges=new vis.DataSet;this.instantiateGraph()}t.prototype.instantiateGraph=function(){var t={nodes:this.nodes,edges:this.edges};var n={nodes:{shape:"dot"},edges:{smooth:{type:"curvedCW",roundness:.2},font:{align:"top",background:"white"}},layout:{hierarchical:{direction:"LR"}},interaction:{dragNodes:false}};this.graph=new vis.Network(this.networkGraphContainer,t,n)};t.prototype.loadNetwork=function(t){if(this.net&&this.net.layers.length==t.layers.length&&this.net.layers.every(function(n,i){return n.length==t.layers[i].length})){this.net=t;this.update();return}this.instantiateGraph();this.net=t;this.nodes.clear();this.edges.clear();var n=[],i=[];for(var e=0;e<t.layers.length;e++){var o=t.layers[e];for(var u=0;u<o.length;u++){var a=o[u];var r="Hidden Neuron "+(u+1);var s="#000";if(a instanceof Net.InputNeuron){r="Input: "+a.name;if(a.constant)s=NetworkVisualization.colors.autoencoder.bias;else s=NetworkVisualization.colors.autoencoder.input}if(a instanceof Net.OutputNeuron){r="Output: "+a.name;s=NetworkVisualization.colors.autoencoder.output}n.push({id:a.id,label:""+r,level:e,color:s})}}for(var p=0,h=t.connections;p<h.length;p++){var c=h[p];i.push({id:c.inp.id*t.connections.length+c.out.id,from:c.inp.id,to:c.out.id,arrows:"to",label:c.weight.toFixed(2)})}this.nodes.add(n);this.edges.add(i)};t.prototype.update=function(){for(var t=0,n=this.net.connections;t<n.length;t++){var i=n[t];this.edges.update({id:i.inp.id*this.net.connections.length+i.out.id,label:i.weight.toFixed(2),width:Math.min(6,Math.abs(i.weight*2)),color:i.weight>0?"blue":"red"})}};return t}();var CanvasMouseNavigation=function(){function t(t,n,i){var e=this;this.scalex=100;this.scaley=-100;this.offsetx=0;this.offsety=0;this.mousedown=false;this.mousestart={x:0,y:0};this.toReal={x:function(t){return(t-e.offsetx)/e.scalex},y:function(t){return(t-e.offsety)/e.scaley}};this.toCanvas={x:function(t){return t*e.scalex+e.offsetx},y:function(t){return t*e.scaley+e.offsety}};this.offsetx=t.width/3;this.offsety=2*t.height/3;t.addEventListener("wheel",function(t){if(t.deltaY===0)return;var n=t.deltaY/Math.abs(t.deltaY);e.scalex*=1-n/10;e.scaley*=1-n/10;i();t.preventDefault()});t.addEventListener("mousedown",function(t){if(!n())return;e.mousedown=true;e.mousestart.x=t.pageX;e.mousestart.y=t.pageY});t.addEventListener("mousemove",function(t){if(!n())return;if(!e.mousedown)return;e.offsetx+=t.pageX-e.mousestart.x;e.offsety+=t.pageY-e.mousestart.y;e.mousestart.x=t.pageX;e.mousestart.y=t.pageY;i()});document.addEventListener("mouseup",function(t){return e.mousedown=false})}return t}();var InputMode;(function(t){t[t["InputPrimary"]=0]="InputPrimary";t[t["InputSecondary"]=1]="InputSecondary";t[t["Remove"]=2]="Remove";t[t["Move"]=3]="Move";t[t["Table"]=4]="Table"})(InputMode||(InputMode={}));var NetworkVisualization=function(){function t(t,n,i,e){this.canvas=t;this.trafo=n;this.sim=i;this.backgroundResolution=e;this.inputMode=0;this.ctx=this.canvas.getContext("2d");this.canvasResized();window.addEventListener("resize",this.canvasResized.bind(this));t.addEventListener("click",this.canvasClicked.bind(this));t.addEventListener("contextmenu",this.canvasClicked.bind(this))}t.prototype.draw=function(){if(this.sim.config.inputLayer.neuronCount!=2||this.sim.config.outputLayer.neuronCount>2){this.clear("white");this.ctx.fillStyle="black";this.ctx.fillText("Cannot draw this data",this.canvas.width/2,this.canvas.height/2);return}this.drawBackground();this.drawCoordinateSystem();this.drawDataPoints()};t.prototype.drawDataPoints=function(){this.ctx.strokeStyle="#000";if(this.sim.config.outputLayer.neuronCount===1){for(var n=0,i=this.sim.config.data;n<i.length;n++){var e=i[n];this.drawPoint(e.input[0],e.input[1],t.colors.binaryClassify.fg[e.output[0]|0])}}else if(this.sim.config.outputLayer.neuronCount===2){for(var o=0,u=this.sim.config.data;o<u.length;o++){var e=u[o];var a=e.input[0],r=e.input[1];var s=this.sim.net.getOutput(e.input);var p=s[0],h=s[1];this.drawLine(a,r,p,h,"black");this.drawPoint(a,r,t.colors.autoencoder.input);this.drawPoint(p,h,t.colors.autoencoder.output)}}else{throw"can't draw this"}};t.prototype.drawLine=function(t,n,i,e,o){t=this.trafo.toCanvas.x(t);i=this.trafo.toCanvas.x(i);n=this.trafo.toCanvas.y(n);e=this.trafo.toCanvas.y(e);this.ctx.strokeStyle=o;this.ctx.beginPath();this.ctx.moveTo(t,n);this.ctx.lineTo(i,e);this.ctx.stroke()};t.prototype.drawPoint=function(t,n,i){t=this.trafo.toCanvas.x(t);n=this.trafo.toCanvas.y(n);this.ctx.fillStyle=i;this.ctx.beginPath();this.ctx.arc(t,n,5,0,2*Math.PI);this.ctx.fill();this.ctx.arc(t,n,5,0,2*Math.PI);this.ctx.stroke()};t.prototype.clear=function(t){this.ctx.fillStyle="white";this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height);return};t.prototype.drawBackground=function(){if(this.sim.config.outputLayer.neuronCount===2){this.clear("white");return}for(var n=0;n<this.canvas.width;n+=this.backgroundResolution){for(var i=0;i<this.canvas.height;i+=this.backgroundResolution){var e=this.sim.net.getOutput([this.trafo.toReal.x(n+this.backgroundResolution/2),this.trafo.toReal.y(i+this.backgroundResolution/2)])[0];if(this.sim.config.showGradient){this.ctx.fillStyle=t.colors.binaryClassify.gradient(e)}else this.ctx.fillStyle=t.colors.binaryClassify.bg[+(e>.5)];this.ctx.fillRect(n,i,this.backgroundResolution,this.backgroundResolution)}}};t.prototype.drawCoordinateSystem=function(){var t=.2;var n=this.ctx,i=this.trafo.toCanvas;n.strokeStyle="#000";n.fillStyle="#000";n.textBaseline="middle";n.textAlign="center";n.font="20px monospace";n.beginPath();n.moveTo(i.x(0),0);n.lineTo(i.x(0),this.canvas.height);n.moveTo(i.x(-t/2),i.y(1));n.lineTo(i.x(t/2),i.y(1));n.fillText("1",i.x(-t),i.y(1));n.moveTo(0,i.y(0));n.lineTo(this.canvas.width,i.y(0));n.moveTo(i.x(1),i.y(-t/2));n.lineTo(i.x(1),i.y(t/2));n.fillText("1",i.x(1),i.y(-t));n.stroke()};t.prototype.canvasResized=function(){this.canvas.width=$(this.canvas).width();this.canvas.height=$(this.canvas).height()};t.prototype.canvasClicked=function(t){var n=this.sim.config.data;var i=this.canvas.getBoundingClientRect();var e=this.trafo.toReal.x(t.clientX-i.left);var o=this.trafo.toReal.y(t.clientY-i.top);if(this.inputMode==2||t.button==2||t.shiftKey){var u=Infinity,a=-1;for(var r=0;r<n.length;r++){var s=n[r];var p=s.input[0]-e,h=s.input[1]-o,c=p*p+h*h;if(c<u)a=r,u=c}if(a>=0)n.splice(a,1)}else if(this.inputMode<2){if(this.sim.config.outputLayer.neuronCount===2){n.push({input:[e,o],output:[e,o]})}else if(this.sim.config.outputLayer.neuronCount===1){var f=function(t){return t==0?1:0};var l=this.inputMode;if(t.button!=0)l=f(l);if(t.ctrlKey||t.metaKey||t.altKey)l=f(l);n.push({input:[e,o],output:[l]})}}t.preventDefault();this.draw()};t.colors={binaryClassify:{bg:["#f88","#8f8"],fg:["#f00","#0f0"],gradient:function(t){return"rgb("+[((1-t)*(256-60)|0)+60,(t*(256-60)|0)+60,60]+")"}},autoencoder:{input:"#2188e0",output:"#ff931f",bias:"#008"}};return t}();var Presets;(function(t){var n=[{name:"Default",stepsPerFrame:50,learningRate:.05,showGradient:false,bias:true,autoRestartTime:5e3,autoRestart:true,iterationsPerClick:5e3,data:[{input:[0,0],output:[0]},{input:[0,1],output:[1]},{input:[1,0],output:[1]},{input:[1,1],output:[0]}],inputLayer:{neuronCount:2,names:["x","y"]},outputLayer:{neuronCount:1,activation:"sigmoid",names:["x XOR y"]},hiddenLayers:[{neuronCount:2,activation:"sigmoid"}]},{name:"XOR"},{name:"Circular data",hiddenLayers:[{neuronCount:3,activation:"sigmoid"}],inputLayer:{neuronCount:2,names:["x","y"]},outputLayer:{neuronCount:1,activation:"sigmoid",names:["Class"]},data:[{input:[1.46,1.36],output:[0]},{input:[1.14,1.26],output:[0]},{input:[.96,.97],output:[0]},{input:[1.04,.76],output:[0]},{input:[1.43,.81],output:[0]},{input:[1.3,1.05],output:[0]},{input:[1.45,1.22],output:[0]},{input:[2.04,1.1],output:[0]},{input:[1.06,.28],output:[0]},{input:[.96,.57],output:[0]},{input:[1.28,.46],output:[0]},{input:[1.51,.33],output:[0]},{input:[1.65,.68],output:[0]},{input:[1.67,1.01],output:[0]},{input:[1.5,1.83],output:[1]},{input:[.76,1.69],output:[1]},{input:[.4,.71],output:[1]},{input:[.61,1.18],output:[1]},{input:[.26,1.42],output:[1]},{input:[.28,1.89],output:[1]},{input:[1.37,1.89],output:[1]},{input:[1.11,1.9],output:[1]},{input:[1.05,2.04],output:[1]},{input:[2.43,1.42],output:[1]},{input:[2.39,1.2],output:[1]},{input:[2.1,1.53],output:[1]},{input:[1.89,1.72],output:[1]},{input:[2.69,.72],output:[1]},{input:[2.96,.44],output:[1]},{input:[2.5,.79],output:[1]},{input:[2.85,1.23],output:[1]},{input:[2.82,1.37],output:[1]},{input:[1.93,1.9],output:[1]},{input:[2.18,1.77],output:[1]},{input:[2.29,.39],output:[1]},{input:[2.57,.22],output:[1]},{input:[2.7,-.11],output:[1]},{input:[1.96,-.2],output:[1]},{input:[1.89,-.1],output:[1]},{input:[1.77,.13],output:[1]},{input:[.73,.01],output:[1]},{input:[.37,.31],output:[1]},{input:[.46,.44],output:[1]},{input:[.48,.11],output:[1]},{input:[.37,-.1],output:[1]},{input:[1.03,-.42],output:[1]},{input:[1.35,-.25],output:[1]},{input:[1.17,.01],output:[1]},{input:[.12,.94],output:[1]},{input:[2.05,.32],output:[1]},{input:[1.97,.55],output:[0]}]},{name:"Auto-Encoder for linear data",stepsPerFrame:1,iterationsPerClick:1,parent:"Auto-Encoder for circular data",data:[{input:[2.25,.19],output:[2.25,.19]},{input:[1.37,.93],output:[1.37,.93]},{input:[.62,1.46],output:[.62,1.46]},{input:[-.23,2.16],output:[-.23,2.16]},{input:[-.55,2.44],output:[-.55,2.44]},{input:[1.04,1.05],output:[1.04,1.05]},{input:[1.7,.85],output:[1.7,.85]},{input:[2.01,.46],output:[2.01,.46]},{input:[.4,1.73],output:[.4,1.73]},{input:[2.73,.01],output:[2.73,.01]},{input:[2.86,-.25],output:[2.86,-.25]},{input:[.14,2.07],output:[.14,2.07]}],hiddenLayers:[{neuronCount:1,activation:"sigmoid"}],showGradient:true},{name:"Auto-Encoder for x^2",parent:"Auto-Encoder for circular data",netLayers:[{activation:"sigmoid",neuronCount:2},{activation:"linear",neuronCount:1},{neuronCount:2,activation:"sigmoid"}],data:Array.apply(null,Array(17)).map(function(t,n){return(n-8)/8}).map(function(t){return{input:[t,t*t],output:[t,t*t]}})},{name:"Auto-Encoder for circular data",stepsPerFrame:500,learningRate:.01,iterationsPerClick:1e4,inputLayer:{neuronCount:2,names:["x","y"]},outputLayer:{neuronCount:2,activation:"linear",names:["x","y"]},hiddenLayers:[{activation:"sigmoid",neuronCount:3},{activation:"linear",neuronCount:1},{neuronCount:3,activation:"sigmoid"}],data:[{input:[-.83,.55],output:[-.83,.55]},{input:[-.98,.21],output:[-.98,.21]},{input:[-.77,-.64],output:[-.77,-.64]},{input:[.95,.31],output:[.95,.31]},{input:[-.86,-.51],output:[-.86,-.51]},{input:[.99,-.11],output:[.99,-.11]},{input:[.97,.24],output:[.97,.24]},{input:[.85,.52],output:[.85,.52]},{input:[-.99,.15],output:[-.99,.15]},{input:[.62,.78],output:[.62,.78]},{input:[.46,-.89],output:[.46,-.89]},{input:[-.68,-.73],output:[-.68,-.73]},{input:[.6,-.8],output:[.6,-.8]},{input:[.38,.92],output:[.38,.92]},{input:[.76,.65],output:[.76,.65]},{input:[.33,-.94],output:[.33,-.94]},{input:[-.99,-.17],output:[-.99,-.17]},{input:[-.99,-.17],output:[-.99,-.17]},{input:[-.97,-.26],output:[-.97,-.26]},{input:[-.79,-.61],output:[-.79,-.61]},{input:[-.03,-1],output:[-.03,-1]},{input:[.58,.81],output:[.58,.81]},{input:[-.67,-.74],output:[-.67,-.74]},{input:[.14,.99],output:[.14,.99]},{input:[.13,-.99],output:[.13,-.99]},{input:[.76,.65],output:[.76,.65]},{input:[-.49,.87],output:[-.49,.87]},{input:[-.28,.96],output:[-.28,.96]},{input:[.47,-.88],output:[.47,-.88]},{input:[-.03,1],output:[-.03,1]},{input:[-.7,.71],output:[-.7,.71]},{input:[.38,.93],output:[.38,.93]},{input:[.62,.79],output:[.62,.79]},{input:[.72,-.69],output:[.72,-.69]},{input:[-.41,-.91],output:[-.41,-.91]},{input:[.74,-.67],output:[.74,-.67]},{input:[.44,.9],output:[.44,.9]},{input:[-.99,-.16],output:[-.99,-.16]},{input:[.62,.78],output:[.62,.78]},{input:[.95,-.39],output:[.95,-.39]},{input:[.86,-.53],output:[.86,-.53]}]}];function i(){return n.map(function(t){return t.name}).filter(function(t){return t!=="Default"})}t.getNames=i;function e(t){var i=[];var e=n.filter(function(n){return n.name===t})[0];i.unshift(e);while(true){var o=e.parent||"Default";e=n.filter(function(t){return t.name===o})[0];i.unshift(e);if(o==="Default")break}i.unshift({});console.log("loading chain="+i.map(function(t){return t.name}));return $.extend.apply($,i)}t.get=e;function o(t){if(t===void 0){t="Default"}var i=n.filter(function(n){return n.name===t})[0];var e=window.simulation.config;var o={};for(var u in e){if(e[u]!==i[u])o[u]=e[u]}return o}t.printPreset=o})(Presets||(Presets={}));var TableEditor=function(){function t(t,n){this.container=t;var i=function e(t,n){Handsontable.renderers.TextRenderer.apply(this,arguments);n.style.fontWeight="bold";n.style.background="#CCC"};t.handsontable({minSpareRows:1,cells:function(t,n,e){if(t>0)return{type:"numeric",format:"0.[000]"};else return{renderer:i}},customBorders:true,allowInvalid:false,afterChange:this.afterChange.bind(this)});this.hot=t.handsontable("getInstance");this.loadData(n)}t.prototype.afterChange=function(t,n){if(n==="loadData")return;this.reparseData()};t.prototype.reparseData=function(){var t=this.hot.getData();var n=t[0];var i=sim.config.inputLayer.neuronCount,e=sim.config.outputLayer.neuronCount;sim.config.inputLayer.names=n.slice(0,i);sim.config.outputLayer.names=n.slice(i,i+e);sim.config.data=t.slice(1).filter(function(t){return t.every(function(t){return typeof t==="number"})}).map(function(t){return{input:t.slice(0,i),output:t.slice(i,i+e)}})};t.prototype.loadData=function(t){var n=[t.config.inputLayer.names.concat(t.config.outputLayer.names)];t.config.data.forEach(function(t){return n.push(t.input.concat(t.output))});this.hot.loadData(n);this.hot.updateSettings({customBorders:[{range:{from:{row:0,col:t.config.inputLayer.neuronCount},to:{row:100,col:t.config.inputLayer.neuronCount}},left:{width:2,color:"black"}}]});this.hot.render()};return t}();var NeuronGui=function(){function t(t){var n=this;this.sim=t;this.layerDiv=$("#hiddenLayersModify > div").clone();$("#hiddenLayersModify").on("click","button",function(n){var i=n.target.textContent=="+";var e=$(n.target.parentNode).index();var o=t.config.hiddenLayers[e].neuronCount+(i?1:-1);if(o<1)return;t.config.hiddenLayers[e].neuronCount=o;$("#hiddenLayersModify .neuronCount").eq(e).text(o);t.initializeNet()});$("#inputLayerModify,#outputLayerModify").on("click","button",function(n){var i=$(n.target).closest("#inputLayerModify").length>0;var e=i?"input":"output";var o=i?t.config.inputLayer:t.config.outputLayer;var u=n.target.textContent=="+";var a=o.neuronCount+(u?1:-1);if(a<1)return;o.neuronCount=a;$("#"+e+"LayerModify .neuronCount").text(a);o.names=[];for(var r=0;r<a;r++)o.names.push(e+" "+(r+1));t.config.data=[];t.initializeNet()});$("#layerCountModifier").on("click","button",function(i){var e=i.target.textContent=="+";if(!e){if(t.config.hiddenLayers.length==0)return;t.config.hiddenLayers.shift();n.removeLayer()}else{t.config.hiddenLayers.unshift({activation:"sigmoid",neuronCount:2});n.addLayer()}$("#layerCount").text(t.config.hiddenLayers.length+2);t.initializeNet()});$("#outputLayerModify").on("change","select",function(n){t.config.outputLayer.activation=n.target.value;t.initializeNet()});$("#hiddenLayersModify").on("change","select",function(n){var i=$(n.target.parentNode).index();t.config.hiddenLayers[i].activation=n.target.value;t.initializeNet()})}t.prototype.removeLayer=function(){$("#hiddenLayersModify > div").eq(0).remove()};t.prototype.addLayer=function(){$("#hiddenLayersModify > div").eq(0).before(this.layerDiv.clone())};t.prototype.setActivation=function(t,n){};t.prototype.regenerate=function(){var t=this.sim.config.hiddenLayers.length;while($("#hiddenLayersModify > div").length>t)this.removeLayer();while($("#hiddenLayersModify > div").length<t)this.addLayer();this.sim.config.hiddenLayers.forEach(function(t,n){$("#hiddenLayersModify .neuronCount").eq(n).text(t.neuronCount);$("#hiddenLayersModify > div").eq(n).children("select.activation").val(t.activation)})};return t}();var Simulation=function(){function t(){var t=this;this.backgroundResolution=10;this.stepNum=0;this.running=false;this.runningId=-1;this.restartTimeout=-1;this.config=Presets.get("XOR");this.statusIterEle=document.getElementById("statusIteration");this.statusCorrectEle=document.getElementById("statusCorrect");this.aniFrameCallback=this.animationStep.bind(this);var n=$("#neuralInputOutput canvas")[0];this.netviz=new NetworkVisualization(n,new CanvasMouseNavigation(n,function(){return t.netviz.inputMode==3},function(){return t.draw()}),this,this.backgroundResolution);this.netgraph=new NetworkGraph($("#neuralNetworkGraph")[0]);$("#learningRate").slider({min:.01,max:1,step:.005,scale:"logarithmic",value:.05}).on("change",function(t){return $("#learningRateVal").text(t.value.newValue.toFixed(3))});this.neuronGui=new NeuronGui(this);for(var i=0,e=Presets.getNames();i<e.length;i++){var o=e[i];$("#presetLoader").append($("<li>").append($("<a>").text(o)))}$("#presetLoader").on("click","a",function(n){var i=n.target.textContent;t.config=Presets.get(i);t.setConfig();t.initializeNet()});this.table=new TableEditor($("<div class='fullsize'>"),this);$("#dataInputSwitch").on("click","a",function(n){$("#dataInputSwitch li.active").removeClass("active");var i=$(n.target).parent();i.addClass("active");var e=i.index();if(t.netviz.inputMode==e)return;t.netviz.inputMode=e;if(e==InputMode.Table){$("#neuralInputOutput > *").replaceWith(t.table.container);t.table.loadData(t)}else{t.table.reparseData();$("#neuralInputOutput > *").replaceWith(t.netviz.canvas);t.draw()}});this.reset();this.run()}t.prototype.initializeNet=function(t){if(this.net)this.stop();this.net=new Net.NeuralNet(this.config.inputLayer,this.config.hiddenLayers,this.config.outputLayer,this.config.learningRate,this.config.bias,undefined,t);var n=this.config.outputLayer.neuronCount===1;$("#dataInputSwitch > li").eq(1).toggle(n);var i=$("#dataInputSwitch > li > a").eq(0);i.text(n?"Add Red":"Add point");if(this.netviz.inputMode!=InputMode.Table)i.click();console.log("net:"+JSON.stringify(this.net.connections.map(function(t){return t.weight})));this.stepNum=0;this.netgraph.loadNetwork(this.net);this.table.loadData(this);this.draw();this.updateStatusLine()};t.prototype.step=function(){this.stepNum++;for(var t=0,n=this.config.data;t<n.length;t++){var i=n[t];this.net.train(i.input,i.output)}};t.prototype.draw=function(){this.netviz.draw();this.netgraph.update()};t.prototype.run=function(){if(this.running)return;$("#runButton").text("Stop").addClass("btn-danger").removeClass("btn-primary");this.running=true;this.animationStep()};t.prototype.stop=function(){clearTimeout(this.restartTimeout);$("#runButton").text("Run").addClass("btn-primary").removeClass("btn-danger");this.restartTimeout=-1;this.running=false;cancelAnimationFrame(this.runningId)};t.prototype.reset=function(){this.stop();this.loadConfig();this.initializeNet()};t.prototype.updateStatusLine=function(){var t=this;var n=0;if(this.config.outputLayer.neuronCount===1){for(var i=0,e=this.config.data;i<e.length;i++){var o=e[i];var u=this.net.getOutput(o.input);if(+(u[0]>.5)==o.output[0])n++}this.statusCorrectEle.innerHTML="Correct: "+n+"/"+this.config.data.length}else{var a=0;for(var r=0,s=this.config.data;r<s.length;r++){var p=s[r];var u=this.net.getOutput(p.input);var h=0;for(var c=0;c<this.net.outputs.length;c++){var f=u[c]-p.output[c];h+=f*f}a+=Math.sqrt(h)}this.statusCorrectEle.innerHTML="Avg. distance: "+(a/this.config.data.length).toFixed(2)}this.statusIterEle.innerHTML=this.stepNum.toString();if(n==this.config.data.length){if(this.config.autoRestart&&this.running&&this.restartTimeout==-1){this.restartTimeout=setTimeout(function(){t.stop();t.restartTimeout=-1;setTimeout(function(){t.reset();t.run()},1e3)},this.config.autoRestartTime-1)}}else{if(this.restartTimeout!=-1){clearTimeout(this.restartTimeout);this.restartTimeout=-1}}};t.prototype.animationStep=function(){for(var t=0;t<this.config.stepsPerFrame;t++)this.step();this.draw();this.updateStatusLine();if(this.running)this.runningId=requestAnimationFrame(this.aniFrameCallback)};t.prototype.iterations=function(){this.stop();for(var t=0;t<this.config.iterationsPerClick;t++)this.step();this.draw();this.updateStatusLine()};t.prototype.loadConfig=function(){var t=this.config;var n=$.extend({},t);for(var i in t){var e=document.getElementById(i);if(!e)continue;if(e.type=="checkbox")t[i]=e.checked;else if(typeof t[i]==="number")t[i]=+e.value;else t[i]=e.value}if(n.simType!=t.simType)t.data=[];if(this.net)this.net.learnRate=this.config.learningRate};t.prototype.setConfig=function(){var t=this.config;for(var n in t){var i=document.getElementById(n);if(!i)continue;if(i.type=="checkbox")i.checked=t[n];else i.value=t[n]}$("#learningRate").slider("setValue",this.config.learningRate);$("#learningRateVal").text(this.config.learningRate.toFixed(3));this.neuronGui.regenerate()};t.prototype.runtoggle=function(){if(this.running)this.stop();else this.run()};return t}();var sim;$(document).ready(function(){return sim=new Simulation});function checkSanity(){var t=[-.3180095069079748,-.2749093166215802,-.038532753589859546,.09576201205465842,-.3460678329225116,.23218797637289554,-.33191669283980774,.5140297481331861,-.1518989898989732];var n=[-.3094657452311367,-.2758470894768834,.005968799814581871,.13201188389211893,-.33257930004037917,.24626848078332841,-.35734778200276196,.489376779878512,-.2165879353415221];sim.stop();sim.config.inputLayer={neuronCount:2,names:["",""]};sim.config.hiddenLayers=[{neuronCount:2,activation:"sigmoid"}];sim.config.outputLayer={neuronCount:1,activation:"sigmoid",names:[""]};sim.net.connections.forEach(function(t,i){return t.weight=n[i]});for(var i=0;i<1e3;i++)sim.step();var e=sim.net.connections.map(function(t){return t.weight});if(e.every(function(n,i){return n!==t[i]}))throw"insanity!";return"ok"}
//# sourceMappingURL=program.min.js.map